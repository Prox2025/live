name: Montar e Transmitir Vídeo

on:
  workflow_dispatch:
    inputs:
      id:
        description: 'ID do evento/live'
        required: true
        type: string

      video_principal:
        description: 'ID do vídeo principal no Google Drive'
        required: true
        type: string

      rodape_id:
        description: 'ID do arquivo footer (rodape.webm) no Google Drive'
        required: false
        type: string

      rodape_texto:
        description: 'Texto que será exibido ao lado do rodapé'
        required: false
        type: string

      videos_extras:
        description: 'IDs dos vídeos extras separados por vírgula (máx. 5)'
        required: false
        type: string

      stream_url:
        description: 'URL para onde será enviado o vídeo final (RTMP ou outro)'
        required: false
        type: string

      chave_json:
        description: 'Conteúdo da chave JSON do Google Drive'
        required: true
        type: string

jobs:
  montar-video:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: 📦 Instalar dependências
        run: |
          sudo apt update
          sudo apt install -y ffmpeg jq
          echo '{}' > package.json
          npm install googleapis puppeteer

      - name: 📄 Salvar chave.json
        run: |
          echo '${{ secrets.SACREDI_JSON }}' > sacredi.json
          echo '${{ inputs.chave_json }}' > chave.json

      - name: 📥 Baixar rodapé do Google Drive
        if: ${{ inputs.rodape_id != '' && inputs.rodape_id != null }}
        run: |
          node <<EOF
          const fs = require('fs');
          const { google } = require('googleapis');

          const auth = new google.auth.GoogleAuth({
            credentials: JSON.parse(fs.readFileSync('chave.json')),
            scopes: ['https://www.googleapis.com/auth/drive.readonly']
          });

          async function baixarRodape() {
            const drive = google.drive({ version: 'v3', auth: await auth.getClient() });
            const dest = fs.createWriteStream('artefatos/rodape.webm');
            const res = await drive.files.get(
              { fileId: '${{ inputs.rodape_id }}', alt: 'media' },
              { responseType: 'stream' }
            );
            fs.mkdirSync('artefatos', { recursive: true });
            await new Promise((resolve, reject) => {
              res.data.pipe(dest).on('finish', resolve).on('error', reject);
            });
            console.log('✅ rodape.webm baixado com sucesso!');
          }

          baixarRodape();
          EOF

      - name: 📄 Criar input.json com todos os dados corretamente
        run: |
          if [ -z "${{ inputs.videos_extras }}" ]; then
            VIDEOS_EXTRAS_JSON='[]'
          else
            IFS=',' read -ra EXTRAS_ARRAY <<< "${{ inputs.videos_extras }}"
            VIDEOS_EXTRAS_JSON=$(printf '%s\n' "${EXTRAS_ARRAY[@]}" | jq -R . | jq -s .)
          fi

          jq -n \
            --arg id "${{ inputs.id }}" \
            --arg video_principal "${{ inputs.video_principal }}" \
            --arg rodape_id "${{ inputs.rodape_id }}" \
            --arg rodape_texto "${{ inputs.rodape_texto }}" \
            --arg stream_url "${{ inputs.stream_url }}" \
            --argjson videos_extras "$VIDEOS_EXTRAS_JSON" \
            --slurpfile sacredi sacredi.json \
          '{
            id: $id,
            video_principal: $video_principal,
            video_inicial: $sacredi[0].video_inicial,
            video_miraplay: $sacredi[0].video_miraplay,
            video_final: $sacredi[0].video_final,
            logo_id: $sacredi[0].logo_id,
            rodape_id: $rodape_id,
            rodape_texto: $rodape_texto,
            videos_extras: $videos_extras,
            stream_url: $stream_url
          }' > input.json

      - name: 🧠 Executar script de montagem
        run: node unir.js

      - name: 📤 Salvar vídeo final (.mp4) e arquivos extras como artifact
        uses: actions/upload-artifact@v4
        with:
          name: video_final
          path: |
            video_final_completo.mp4
            stream_info.json
            artefatos/rodape.webm

  transmitir-video:
    runs-on: ubuntu-latest
    needs: montar-video

    steps:
      - name: 📥 Clonar repositório
        uses: actions/checkout@v4

      - name: 📦 Instalar dependências para transmissão
        run: |
          sudo apt update
          sudo apt install -y ffmpeg
          echo '{}' > package.json
          npm install puppeteer

      - name: 📄 Baixar artifact com vídeo e stream_info
        uses: actions/download-artifact@v4
        with:
          name: video_final
          path: video_final

      - name: 📂 Copiar arquivos para diretório atual
        run: cp -r video_final/* .

      - name: 📝 Listar arquivos (debug opcional)
        run: ls -la

      - name: ▶️ Transmitir vídeo final (.mp4) com rodapé
        env:
          SERVER_STATUS_URL: ${{ secrets.SERVER_STATUS_URL }}
        run: node transmitir.js
